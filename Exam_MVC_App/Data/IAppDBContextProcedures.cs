// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Exam_MVC_App.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Exam_MVC_App.Data
{
    public partial interface IAppDBContextProcedures
    {
        Task<int> sp_add_choiceAsync(string choice, string c_type, int? question_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_add_student_answerAsync(string answer, int? userId, int? examquestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_AddInstructor_DetailsResult>> sp_AddInstructor_DetailsAsync(int? user_id, byte? track_id, int? course_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_AddInstructor_DetialsAsync(int? id, int? user_id, byte? track_id, int? course_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_AddStudent_DetailsAsync(int? user_id, byte? track_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_AddStudent_DetialsAsync(int? id, int? user_id, byte? track_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_AddUserRowAsync(string fname, string lname, string role, string phone, string email, string pass, string gender, DateOnly? dateofBirth, string satus, decimal? salary, byte? branch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_correct_examResult>> sp_correct_examAsync(int? examid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_createbranchAsync(string b_name, int? b_mg_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_createcourceAsync(string c_name, byte? c_hours, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_createstudent_coursesAsync(int? sc_cource_id, int? sc_user_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_createtrackAsync(int? t_mng_id, string t_name, int? t_hours, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_delete_choiceAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_delete_examAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_delete_exam_questionAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_Delete_Instructor_DetailsResult>> sp_Delete_Instructor_DetailsAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_delete_student_answerAsync(int? userId, int? examquestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_Delete_Student_DetailsResult>> sp_Delete_Student_DetailsAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_deletebranchAsync(byte? b_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_deletecourceAsync(int? c_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_DeleteQuestionAsync(int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_DeleteRightAnswerAsync(int? rightAnswersId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_deletestudent_coursesAsync(int? sc_id, CancellationToken cancellationToken = default);
        Task<int> sp_deletetrackAsync(int? t_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_DeleteUserAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_Edit_Instructor_DetailsAsync(int? id, int? user_id, byte? track_id, int? course_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_Edit_Instructor_DetialsAsync(int? id, int? user_id, byte? track_id, int? course_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_Edit_Student_DetailsAsync(int? id, int? user_id, byte? track_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_EditUserAsync(int? id, string fname, string lname, string role, string phone, string email, string pass, string gender, DateOnly? dateofBirth, string status, decimal? salary, byte? branch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_exam_student_answers_reportResult>> sp_exam_student_answers_reportAsync(int? examid, int? studentid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_ExamAnswersResult>> sp_ExamAnswersAsync(string answer, int? userId, int? examquestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_generate_examAsync(string name, int? duration, DateOnly? date, string status, byte? hardcount, byte? normalcount, byte? easycount, byte? totalmarks, int? courseid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_GetExamQuestionsWithChoicesResult>> sp_GetExamQuestionsWithChoicesAsync(int? examId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_getinstructorcoursesreportResult>> sp_getinstructorcoursesreportAsync(int? instructor_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_InsertQuestionAsync(string name, string type, string difficult, byte? mark, string multi_Single, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_InsertRightAnswerAsync(string right_Answer, int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_new_examAsync(string name, int? duration, DateOnly? date, string status, byte? hardcount, byte? normalcount, byte? easycount, byte? totalmarks, int? courseid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_new_exam_questionAsync(int? question_id, int? exam_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_SelectQuestionResult>> sp_SelectQuestionAsync(int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_SelectRightAnswersResult>> sp_SelectRightAnswersAsync(int? rightAnswersId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_show_choicesResult>> sp_show_choicesAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_show_examResult>> sp_show_examAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_show_exam_questionResult>> sp_show_exam_questionAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_show_student_answerResult>> sp_show_student_answerAsync(int? userId, int? examquestion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_showStudentDetailsResult>> sp_showStudentDetailsAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_showUserResult>> sp_showUserAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_update_choiceAsync(int? id, string choice, string c_type, int? question_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_update_examAsync(int? id, string name, int? duration, DateOnly? date, string status, byte? hardcount, byte? normalcount, byte? easycount, byte? totalmarks, int? courseid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_update_exam_questionAsync(int? id, int? question_id, int? exam_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_update_student_answerAsync(string answer, int? userId, int? examquestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_updatebranchAsync(byte? b_id, string b_name, int? b_mg_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_updatecourseAsync(int? c_id, string c_name, int? c_hour, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_UpdateQuestionAsync(int? questionId, string name, string type, string difficult, byte? mark, string multi_Single, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_UpdateRightAnswerAsync(int? rightAnswersId, string right_Answer, int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_updatestudent_coursesResult>> sp_updatestudent_coursesAsync(int? sc_id, int? sc_course_id, int? sc_student_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_updatetrackAsync(byte? t_id, string t_name, int? t_hours, int? t_mng_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
